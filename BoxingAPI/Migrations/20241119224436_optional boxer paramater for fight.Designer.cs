// <auto-generated />
using System;
using BoxingAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BoxingAPI.Migrations
{
    [DbContext(typeof(BoxingDbContext))]
    [Migration("20241119224436_optional boxer paramater for fight")]
    partial class optionalboxerparamaterforfight
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BoxingAPI.Models.Boxer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegisteredGymId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RegisteredGymId");

                    b.ToTable("Boxers");
                });

            modelBuilder.Entity("BoxingAPI.Models.Fight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LoserBoxerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WinnerBoxerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LoserBoxerId");

                    b.HasIndex("WinnerBoxerId");

                    b.ToTable("Fights");
                });

            modelBuilder.Entity("BoxingAPI.Models.Gym", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gyms");
                });

            modelBuilder.Entity("BoxingAPI.Models.Boxer", b =>
                {
                    b.HasOne("BoxingAPI.Models.Gym", "RegisteredGym")
                        .WithMany("Boxers")
                        .HasForeignKey("RegisteredGymId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegisteredGym");
                });

            modelBuilder.Entity("BoxingAPI.Models.Fight", b =>
                {
                    b.HasOne("BoxingAPI.Models.Boxer", "LoserBoxer")
                        .WithMany()
                        .HasForeignKey("LoserBoxerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BoxingAPI.Models.Boxer", "WinnerBoxer")
                        .WithMany()
                        .HasForeignKey("WinnerBoxerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoserBoxer");

                    b.Navigation("WinnerBoxer");
                });

            modelBuilder.Entity("BoxingAPI.Models.Gym", b =>
                {
                    b.Navigation("Boxers");
                });
#pragma warning restore 612, 618
        }
    }
}
